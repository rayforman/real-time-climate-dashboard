version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: climate-postgres
    environment:
      POSTGRES_DB: climate_dashboard
      POSTGRES_USER: climate_user
      POSTGRES_PASSWORD: climate_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - climate-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: climate-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - climate-network

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: climate-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://climate_user:climate_password@postgres:5432/climate_dashboard
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - climate-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Apache Airflow (Simplified for development)
  airflow:
    build:
      context: ./backend/airflow
      dockerfile: Dockerfile
    container_name: climate-airflow
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://climate_user:climate_password@postgres:5432/climate_dashboard
      - AIRFLOW__CORE__FERNET_KEY=your-secret-fernet-key-here-32-chars
      - AIRFLOW__WEBSERVER__SECRET_KEY=your-secret-key-here
    volumes:
      - ./backend/airflow/dags:/opt/airflow/dags
      - ./backend/airflow/plugins:/opt/airflow/plugins
    depends_on:
      - postgres
      - redis
    networks:
      - climate-network

  # React Frontend (for later)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: climate-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    networks:
      - climate-network

  # Nginx Load Balancer (for production)
  nginx:
    image: nginx:alpine
    container_name: climate-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - climate-network

volumes:
  postgres_data:
  redis_data:

networks:
  climate-network:
    driver: bridge